# Makefile.in generated by automake 1.5d from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /source/Syllable/0.3.9/system/dist-root/atheos/usr
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/textutils
pkglibdir = $(libdir)/textutils
pkgincludedir = $(includedir)/textutils
top_builddir = ..

ACLOCAL = ${SHELL} /source/Syllable/0.3.9/system/apps/gnu/textutils/config/missing --run aclocal-1.5d
AUTOCONF = ${SHELL} /source/Syllable/0.3.9/system/apps/gnu/textutils/config/missing --run autoconf
AUTOMAKE = ${SHELL} /source/Syllable/0.3.9/system/apps/gnu/textutils/config/missing --run automake-1.5d
AUTOHEADER = ${SHELL} /source/Syllable/0.3.9/system/apps/gnu/textutils/config/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/local/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = i386-pc-atheos

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :

datadir = $(prefix)/share
AMTAR = ${SHELL} /source/Syllable/0.3.9/system/apps/gnu/textutils/config/missing --run tar
AWK = gawk
BUILD_INCLUDED_LIBINTL = no
CATOBJEXT = .gmo
CC = gcc
CPP = gcc -E
DATADIRNAME = share
DEPDIR = .deps
DF_PROG = df
FESETROUND_LIBM = -lm
GENCAT = gencat
GETLOADAVG_LIBS = 
GLIBC21 = yes
GMSGFMT = :
GNU_PACKAGE = GNU textutils
HAVE_LIB = @HAVE_LIB@
HELP2MAN = ${SHELL} /source/Syllable/0.3.9/system/apps/gnu/textutils/config/missing --run help2man
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLBISON = bison
INTLLIBS = 
INTLOBJS = 
INTL_LIBTOOL_SUFFIX_PREFIX = 
KMEM_GROUP = 
LIB = @LIB@
LIBICONV = 
LIBINTL = 
LIB_CLOCK_GETTIME = 
LIB_CRYPT = -lcrypt
LIB_NANOSLEEP = 
LTLIB = @LTLIB@
LTLIBICONV = 
LTLIBINTL = 
MAN = 
MKINSTALLDIRS = config/mkinstalldirs
NEED_SETGID = false
OPTIONAL_BIN_PROGS = 
OPTIONAL_BIN_ZCRIPTS = 
PACKAGE = textutils
PERL = perl
POSUB = po
RANLIB = ranlib
SEQ_LIBM = 
SQRT_LIBM = -lm
STRIP = 
U = 
USE_INCLUDED_LIBINTL = no
USE_NLS = yes
VERSION = 2.0.21
YACC = bison -y
am__include = include
am__quote = 
install_sh = /source/Syllable/0.3.9/system/apps/gnu/textutils/config/install-sh
AUTOMAKE_OPTIONS = ansi2knr

bin_PROGRAMS = cat cksum comm csplit cut expand fmt fold head join md5sum \
nl od paste pr ptx sha1sum sort split sum tac tail tr tsort unexpand uniq wc


noinst_HEADERS = sys2.h system.h checksum.h
EXTRA_DIST = tac-pipe.c
localedir = $(datadir)/locale

INCLUDES = -I.. -I$(srcdir) -I$(top_srcdir)/lib -I../lib -I../intl
DEFS = -DLOCALEDIR=\"$(localedir)\" -DHAVE_CONFIG_H
LDADD =  ../lib/libfetish.a

md5sum_SOURCES = md5sum.c md5.c
sha1sum_SOURCES = md5sum.c sha1sum.c

sort_LDADD = $(LDADD) 
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = cat$(EXEEXT) cksum$(EXEEXT) comm$(EXEEXT) csplit$(EXEEXT) \
	cut$(EXEEXT) expand$(EXEEXT) fmt$(EXEEXT) fold$(EXEEXT) \
	head$(EXEEXT) join$(EXEEXT) md5sum$(EXEEXT) nl$(EXEEXT) \
	od$(EXEEXT) paste$(EXEEXT) pr$(EXEEXT) ptx$(EXEEXT) \
	sha1sum$(EXEEXT) sort$(EXEEXT) split$(EXEEXT) sum$(EXEEXT) \
	tac$(EXEEXT) tail$(EXEEXT) tr$(EXEEXT) tsort$(EXEEXT) \
	unexpand$(EXEEXT) uniq$(EXEEXT) wc$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

cat_SOURCES = cat.c
cat_OBJECTS = cat$U.$(OBJEXT)
cat_LDADD = $(LDADD)
cat_DEPENDENCIES = ../lib/libfetish.a
cat_LDFLAGS =
cksum_SOURCES = cksum.c
cksum_OBJECTS = cksum$U.$(OBJEXT)
cksum_LDADD = $(LDADD)
cksum_DEPENDENCIES = ../lib/libfetish.a
cksum_LDFLAGS =
comm_SOURCES = comm.c
comm_OBJECTS = comm$U.$(OBJEXT)
comm_LDADD = $(LDADD)
comm_DEPENDENCIES = ../lib/libfetish.a
comm_LDFLAGS =
csplit_SOURCES = csplit.c
csplit_OBJECTS = csplit$U.$(OBJEXT)
csplit_LDADD = $(LDADD)
csplit_DEPENDENCIES = ../lib/libfetish.a
csplit_LDFLAGS =
cut_SOURCES = cut.c
cut_OBJECTS = cut$U.$(OBJEXT)
cut_LDADD = $(LDADD)
cut_DEPENDENCIES = ../lib/libfetish.a
cut_LDFLAGS =
expand_SOURCES = expand.c
expand_OBJECTS = expand$U.$(OBJEXT)
expand_LDADD = $(LDADD)
expand_DEPENDENCIES = ../lib/libfetish.a
expand_LDFLAGS =
fmt_SOURCES = fmt.c
fmt_OBJECTS = fmt$U.$(OBJEXT)
fmt_LDADD = $(LDADD)
fmt_DEPENDENCIES = ../lib/libfetish.a
fmt_LDFLAGS =
fold_SOURCES = fold.c
fold_OBJECTS = fold$U.$(OBJEXT)
fold_LDADD = $(LDADD)
fold_DEPENDENCIES = ../lib/libfetish.a
fold_LDFLAGS =
head_SOURCES = head.c
head_OBJECTS = head$U.$(OBJEXT)
head_LDADD = $(LDADD)
head_DEPENDENCIES = ../lib/libfetish.a
head_LDFLAGS =
join_SOURCES = join.c
join_OBJECTS = join$U.$(OBJEXT)
join_LDADD = $(LDADD)
join_DEPENDENCIES = ../lib/libfetish.a
join_LDFLAGS =
am_md5sum_OBJECTS = md5sum$U.$(OBJEXT) md5$U.$(OBJEXT)
md5sum_OBJECTS = $(am_md5sum_OBJECTS)
md5sum_LDADD = $(LDADD)
md5sum_DEPENDENCIES = ../lib/libfetish.a
md5sum_LDFLAGS =
nl_SOURCES = nl.c
nl_OBJECTS = nl$U.$(OBJEXT)
nl_LDADD = $(LDADD)
nl_DEPENDENCIES = ../lib/libfetish.a
nl_LDFLAGS =
od_SOURCES = od.c
od_OBJECTS = od$U.$(OBJEXT)
od_LDADD = $(LDADD)
od_DEPENDENCIES = ../lib/libfetish.a
od_LDFLAGS =
paste_SOURCES = paste.c
paste_OBJECTS = paste$U.$(OBJEXT)
paste_LDADD = $(LDADD)
paste_DEPENDENCIES = ../lib/libfetish.a
paste_LDFLAGS =
pr_SOURCES = pr.c
pr_OBJECTS = pr$U.$(OBJEXT)
pr_LDADD = $(LDADD)
pr_DEPENDENCIES = ../lib/libfetish.a
pr_LDFLAGS =
ptx_SOURCES = ptx.c
ptx_OBJECTS = ptx$U.$(OBJEXT)
ptx_LDADD = $(LDADD)
ptx_DEPENDENCIES = ../lib/libfetish.a
ptx_LDFLAGS =
am_sha1sum_OBJECTS = md5sum$U.$(OBJEXT) sha1sum$U.$(OBJEXT)
sha1sum_OBJECTS = $(am_sha1sum_OBJECTS)
sha1sum_LDADD = $(LDADD)
sha1sum_DEPENDENCIES = ../lib/libfetish.a
sha1sum_LDFLAGS =
sort_SOURCES = sort.c
sort_OBJECTS = sort$U.$(OBJEXT)
sort_DEPENDENCIES = ../lib/libfetish.a
sort_LDFLAGS =
split_SOURCES = split.c
split_OBJECTS = split$U.$(OBJEXT)
split_LDADD = $(LDADD)
split_DEPENDENCIES = ../lib/libfetish.a
split_LDFLAGS =
sum_SOURCES = sum.c
sum_OBJECTS = sum$U.$(OBJEXT)
sum_LDADD = $(LDADD)
sum_DEPENDENCIES = ../lib/libfetish.a
sum_LDFLAGS =
tac_SOURCES = tac.c
tac_OBJECTS = tac$U.$(OBJEXT)
tac_LDADD = $(LDADD)
tac_DEPENDENCIES = ../lib/libfetish.a
tac_LDFLAGS =
tail_SOURCES = tail.c
tail_OBJECTS = tail$U.$(OBJEXT)
tail_LDADD = $(LDADD)
tail_DEPENDENCIES = ../lib/libfetish.a
tail_LDFLAGS =
tr_SOURCES = tr.c
tr_OBJECTS = tr$U.$(OBJEXT)
tr_LDADD = $(LDADD)
tr_DEPENDENCIES = ../lib/libfetish.a
tr_LDFLAGS =
tsort_SOURCES = tsort.c
tsort_OBJECTS = tsort$U.$(OBJEXT)
tsort_LDADD = $(LDADD)
tsort_DEPENDENCIES = ../lib/libfetish.a
tsort_LDFLAGS =
unexpand_SOURCES = unexpand.c
unexpand_OBJECTS = unexpand$U.$(OBJEXT)
unexpand_LDADD = $(LDADD)
unexpand_DEPENDENCIES = ../lib/libfetish.a
unexpand_LDFLAGS =
uniq_SOURCES = uniq.c
uniq_OBJECTS = uniq$U.$(OBJEXT)
uniq_LDADD = $(LDADD)
uniq_DEPENDENCIES = ../lib/libfetish.a
uniq_LDFLAGS =
wc_SOURCES = wc.c
wc_OBJECTS = wc$U.$(OBJEXT)
wc_LDADD = $(LDADD)
wc_DEPENDENCIES = ../lib/libfetish.a
wc_LDFLAGS =
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = 
LDFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/cat$U.Po ./$(DEPDIR)/cksum$U.Po \
	./$(DEPDIR)/comm$U.Po ./$(DEPDIR)/csplit$U.Po \
	./$(DEPDIR)/cut$U.Po ./$(DEPDIR)/expand$U.Po \
	./$(DEPDIR)/fmt$U.Po ./$(DEPDIR)/fold$U.Po \
	./$(DEPDIR)/head$U.Po ./$(DEPDIR)/join$U.Po \
	./$(DEPDIR)/md5$U.Po ./$(DEPDIR)/md5sum$U.Po \
	./$(DEPDIR)/nl$U.Po ./$(DEPDIR)/od$U.Po \
	./$(DEPDIR)/paste$U.Po ./$(DEPDIR)/pr$U.Po \
	./$(DEPDIR)/ptx$U.Po ./$(DEPDIR)/sha1sum$U.Po \
	./$(DEPDIR)/sort$U.Po ./$(DEPDIR)/split$U.Po \
	./$(DEPDIR)/sum$U.Po ./$(DEPDIR)/tac$U.Po \
	./$(DEPDIR)/tail$U.Po ./$(DEPDIR)/tr$U.Po \
	./$(DEPDIR)/tsort$U.Po ./$(DEPDIR)/unexpand$U.Po \
	./$(DEPDIR)/uniq$U.Po ./$(DEPDIR)/wc$U.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = -g -O2
DIST_SOURCES = cat.c cksum.c comm.c csplit.c cut.c expand.c fmt.c fold.c \
	head.c join.c $(md5sum_SOURCES) nl.c od.c paste.c pr.c ptx.c \
	$(sha1sum_SOURCES) sort.c split.c sum.c tac.c tail.c tr.c \
	tsort.c unexpand.c uniq.c wc.c
HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in ansi2knr.1 \
	ansi2knr.c
SOURCES = cat.c cksum.c comm.c csplit.c cut.c expand.c fmt.c fold.c head.c join.c $(md5sum_SOURCES) nl.c od.c paste.c pr.c ptx.c $(sha1sum_SOURCES) sort.c split.c sum.c tac.c tail.c tr.c tsort.c unexpand.c uniq.c wc.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo $$p1|sed '$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
cat$(EXEEXT): $(cat_OBJECTS) $(cat_DEPENDENCIES) 
	@rm -f cat$(EXEEXT)
	$(LINK) $(cat_LDFLAGS) $(cat_OBJECTS) $(cat_LDADD) $(LIBS)
cksum$(EXEEXT): $(cksum_OBJECTS) $(cksum_DEPENDENCIES) 
	@rm -f cksum$(EXEEXT)
	$(LINK) $(cksum_LDFLAGS) $(cksum_OBJECTS) $(cksum_LDADD) $(LIBS)
comm$(EXEEXT): $(comm_OBJECTS) $(comm_DEPENDENCIES) 
	@rm -f comm$(EXEEXT)
	$(LINK) $(comm_LDFLAGS) $(comm_OBJECTS) $(comm_LDADD) $(LIBS)
csplit$(EXEEXT): $(csplit_OBJECTS) $(csplit_DEPENDENCIES) 
	@rm -f csplit$(EXEEXT)
	$(LINK) $(csplit_LDFLAGS) $(csplit_OBJECTS) $(csplit_LDADD) $(LIBS)
cut$(EXEEXT): $(cut_OBJECTS) $(cut_DEPENDENCIES) 
	@rm -f cut$(EXEEXT)
	$(LINK) $(cut_LDFLAGS) $(cut_OBJECTS) $(cut_LDADD) $(LIBS)
expand$(EXEEXT): $(expand_OBJECTS) $(expand_DEPENDENCIES) 
	@rm -f expand$(EXEEXT)
	$(LINK) $(expand_LDFLAGS) $(expand_OBJECTS) $(expand_LDADD) $(LIBS)
fmt$(EXEEXT): $(fmt_OBJECTS) $(fmt_DEPENDENCIES) 
	@rm -f fmt$(EXEEXT)
	$(LINK) $(fmt_LDFLAGS) $(fmt_OBJECTS) $(fmt_LDADD) $(LIBS)
fold$(EXEEXT): $(fold_OBJECTS) $(fold_DEPENDENCIES) 
	@rm -f fold$(EXEEXT)
	$(LINK) $(fold_LDFLAGS) $(fold_OBJECTS) $(fold_LDADD) $(LIBS)
head$(EXEEXT): $(head_OBJECTS) $(head_DEPENDENCIES) 
	@rm -f head$(EXEEXT)
	$(LINK) $(head_LDFLAGS) $(head_OBJECTS) $(head_LDADD) $(LIBS)
join$(EXEEXT): $(join_OBJECTS) $(join_DEPENDENCIES) 
	@rm -f join$(EXEEXT)
	$(LINK) $(join_LDFLAGS) $(join_OBJECTS) $(join_LDADD) $(LIBS)
md5sum$(EXEEXT): $(md5sum_OBJECTS) $(md5sum_DEPENDENCIES) 
	@rm -f md5sum$(EXEEXT)
	$(LINK) $(md5sum_LDFLAGS) $(md5sum_OBJECTS) $(md5sum_LDADD) $(LIBS)
nl$(EXEEXT): $(nl_OBJECTS) $(nl_DEPENDENCIES) 
	@rm -f nl$(EXEEXT)
	$(LINK) $(nl_LDFLAGS) $(nl_OBJECTS) $(nl_LDADD) $(LIBS)
od$(EXEEXT): $(od_OBJECTS) $(od_DEPENDENCIES) 
	@rm -f od$(EXEEXT)
	$(LINK) $(od_LDFLAGS) $(od_OBJECTS) $(od_LDADD) $(LIBS)
paste$(EXEEXT): $(paste_OBJECTS) $(paste_DEPENDENCIES) 
	@rm -f paste$(EXEEXT)
	$(LINK) $(paste_LDFLAGS) $(paste_OBJECTS) $(paste_LDADD) $(LIBS)
pr$(EXEEXT): $(pr_OBJECTS) $(pr_DEPENDENCIES) 
	@rm -f pr$(EXEEXT)
	$(LINK) $(pr_LDFLAGS) $(pr_OBJECTS) $(pr_LDADD) $(LIBS)
ptx$(EXEEXT): $(ptx_OBJECTS) $(ptx_DEPENDENCIES) 
	@rm -f ptx$(EXEEXT)
	$(LINK) $(ptx_LDFLAGS) $(ptx_OBJECTS) $(ptx_LDADD) $(LIBS)
sha1sum$(EXEEXT): $(sha1sum_OBJECTS) $(sha1sum_DEPENDENCIES) 
	@rm -f sha1sum$(EXEEXT)
	$(LINK) $(sha1sum_LDFLAGS) $(sha1sum_OBJECTS) $(sha1sum_LDADD) $(LIBS)
sort$(EXEEXT): $(sort_OBJECTS) $(sort_DEPENDENCIES) 
	@rm -f sort$(EXEEXT)
	$(LINK) $(sort_LDFLAGS) $(sort_OBJECTS) $(sort_LDADD) $(LIBS)
split$(EXEEXT): $(split_OBJECTS) $(split_DEPENDENCIES) 
	@rm -f split$(EXEEXT)
	$(LINK) $(split_LDFLAGS) $(split_OBJECTS) $(split_LDADD) $(LIBS)
sum$(EXEEXT): $(sum_OBJECTS) $(sum_DEPENDENCIES) 
	@rm -f sum$(EXEEXT)
	$(LINK) $(sum_LDFLAGS) $(sum_OBJECTS) $(sum_LDADD) $(LIBS)
tac$(EXEEXT): $(tac_OBJECTS) $(tac_DEPENDENCIES) 
	@rm -f tac$(EXEEXT)
	$(LINK) $(tac_LDFLAGS) $(tac_OBJECTS) $(tac_LDADD) $(LIBS)
tail$(EXEEXT): $(tail_OBJECTS) $(tail_DEPENDENCIES) 
	@rm -f tail$(EXEEXT)
	$(LINK) $(tail_LDFLAGS) $(tail_OBJECTS) $(tail_LDADD) $(LIBS)
tr$(EXEEXT): $(tr_OBJECTS) $(tr_DEPENDENCIES) 
	@rm -f tr$(EXEEXT)
	$(LINK) $(tr_LDFLAGS) $(tr_OBJECTS) $(tr_LDADD) $(LIBS)
tsort$(EXEEXT): $(tsort_OBJECTS) $(tsort_DEPENDENCIES) 
	@rm -f tsort$(EXEEXT)
	$(LINK) $(tsort_LDFLAGS) $(tsort_OBJECTS) $(tsort_LDADD) $(LIBS)
unexpand$(EXEEXT): $(unexpand_OBJECTS) $(unexpand_DEPENDENCIES) 
	@rm -f unexpand$(EXEEXT)
	$(LINK) $(unexpand_LDFLAGS) $(unexpand_OBJECTS) $(unexpand_LDADD) $(LIBS)
uniq$(EXEEXT): $(uniq_OBJECTS) $(uniq_DEPENDENCIES) 
	@rm -f uniq$(EXEEXT)
	$(LINK) $(uniq_LDFLAGS) $(uniq_OBJECTS) $(uniq_LDADD) $(LIBS)
wc$(EXEEXT): $(wc_OBJECTS) $(wc_DEPENDENCIES) 
	@rm -f wc$(EXEEXT)
	$(LINK) $(wc_LDFLAGS) $(wc_OBJECTS) $(wc_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

ANSI2KNR = 
ansi2knr: ansi2knr.$(OBJEXT)
	$(LINK) ansi2knr.$(OBJEXT) $(LIBS)
ansi2knr.$(OBJEXT): $(CONFIG_HEADER)

clean-krextra:
	-rm -f ansi2knr

mostlyclean-kr:
	-test "$U" = "" || rm -f *_.c

include ./$(DEPDIR)/cat$U.Po
include ./$(DEPDIR)/cksum$U.Po
include ./$(DEPDIR)/comm$U.Po
include ./$(DEPDIR)/csplit$U.Po
include ./$(DEPDIR)/cut$U.Po
include ./$(DEPDIR)/expand$U.Po
include ./$(DEPDIR)/fmt$U.Po
include ./$(DEPDIR)/fold$U.Po
include ./$(DEPDIR)/head$U.Po
include ./$(DEPDIR)/join$U.Po
include ./$(DEPDIR)/md5$U.Po
include ./$(DEPDIR)/md5sum$U.Po
include ./$(DEPDIR)/nl$U.Po
include ./$(DEPDIR)/od$U.Po
include ./$(DEPDIR)/paste$U.Po
include ./$(DEPDIR)/pr$U.Po
include ./$(DEPDIR)/ptx$U.Po
include ./$(DEPDIR)/sha1sum$U.Po
include ./$(DEPDIR)/sort$U.Po
include ./$(DEPDIR)/split$U.Po
include ./$(DEPDIR)/sum$U.Po
include ./$(DEPDIR)/tac$U.Po
include ./$(DEPDIR)/tail$U.Po
include ./$(DEPDIR)/tr$U.Po
include ./$(DEPDIR)/tsort$U.Po
include ./$(DEPDIR)/unexpand$U.Po
include ./$(DEPDIR)/uniq$U.Po
include ./$(DEPDIR)/wc$U.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `test -f $< || echo '$(srcdir)/'`$<

.c.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `cygpath -w $<`
CCDEPMODE = depmode=gcc
cat_.c: cat.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/cat.c; then echo $(srcdir)/cat.c; else echo cat.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > cat_.c || rm -f cat_.c
cksum_.c: cksum.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/cksum.c; then echo $(srcdir)/cksum.c; else echo cksum.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > cksum_.c || rm -f cksum_.c
comm_.c: comm.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/comm.c; then echo $(srcdir)/comm.c; else echo comm.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > comm_.c || rm -f comm_.c
csplit_.c: csplit.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/csplit.c; then echo $(srcdir)/csplit.c; else echo csplit.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > csplit_.c || rm -f csplit_.c
cut_.c: cut.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/cut.c; then echo $(srcdir)/cut.c; else echo cut.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > cut_.c || rm -f cut_.c
expand_.c: expand.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/expand.c; then echo $(srcdir)/expand.c; else echo expand.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > expand_.c || rm -f expand_.c
fmt_.c: fmt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/fmt.c; then echo $(srcdir)/fmt.c; else echo fmt.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > fmt_.c || rm -f fmt_.c
fold_.c: fold.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/fold.c; then echo $(srcdir)/fold.c; else echo fold.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > fold_.c || rm -f fold_.c
head_.c: head.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/head.c; then echo $(srcdir)/head.c; else echo head.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > head_.c || rm -f head_.c
join_.c: join.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/join.c; then echo $(srcdir)/join.c; else echo join.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > join_.c || rm -f join_.c
md5_.c: md5.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/md5.c; then echo $(srcdir)/md5.c; else echo md5.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > md5_.c || rm -f md5_.c
md5sum_.c: md5sum.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/md5sum.c; then echo $(srcdir)/md5sum.c; else echo md5sum.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > md5sum_.c || rm -f md5sum_.c
nl_.c: nl.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/nl.c; then echo $(srcdir)/nl.c; else echo nl.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > nl_.c || rm -f nl_.c
od_.c: od.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/od.c; then echo $(srcdir)/od.c; else echo od.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > od_.c || rm -f od_.c
paste_.c: paste.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/paste.c; then echo $(srcdir)/paste.c; else echo paste.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > paste_.c || rm -f paste_.c
pr_.c: pr.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/pr.c; then echo $(srcdir)/pr.c; else echo pr.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > pr_.c || rm -f pr_.c
ptx_.c: ptx.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ptx.c; then echo $(srcdir)/ptx.c; else echo ptx.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > ptx_.c || rm -f ptx_.c
sha1sum_.c: sha1sum.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/sha1sum.c; then echo $(srcdir)/sha1sum.c; else echo sha1sum.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > sha1sum_.c || rm -f sha1sum_.c
sort_.c: sort.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/sort.c; then echo $(srcdir)/sort.c; else echo sort.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > sort_.c || rm -f sort_.c
split_.c: split.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/split.c; then echo $(srcdir)/split.c; else echo split.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > split_.c || rm -f split_.c
sum_.c: sum.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/sum.c; then echo $(srcdir)/sum.c; else echo sum.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > sum_.c || rm -f sum_.c
tac_.c: tac.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tac.c; then echo $(srcdir)/tac.c; else echo tac.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > tac_.c || rm -f tac_.c
tail_.c: tail.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tail.c; then echo $(srcdir)/tail.c; else echo tail.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > tail_.c || rm -f tail_.c
tr_.c: tr.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tr.c; then echo $(srcdir)/tr.c; else echo tr.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > tr_.c || rm -f tr_.c
tsort_.c: tsort.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsort.c; then echo $(srcdir)/tsort.c; else echo tsort.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > tsort_.c || rm -f tsort_.c
unexpand_.c: unexpand.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/unexpand.c; then echo $(srcdir)/unexpand.c; else echo unexpand.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > unexpand_.c || rm -f unexpand_.c
uniq_.c: uniq.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/uniq.c; then echo $(srcdir)/uniq.c; else echo uniq.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > uniq_.c || rm -f uniq_.c
wc_.c: wc.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/wc.c; then echo $(srcdir)/wc.c; else echo wc.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > wc_.c || rm -f wc_.c
cat_.$(OBJEXT) cksum_.$(OBJEXT) comm_.$(OBJEXT) csplit_.$(OBJEXT) \
cut_.$(OBJEXT) expand_.$(OBJEXT) fmt_.$(OBJEXT) fold_.$(OBJEXT) \
head_.$(OBJEXT) join_.$(OBJEXT) md5_.$(OBJEXT) md5sum_.$(OBJEXT) \
nl_.$(OBJEXT) od_.$(OBJEXT) paste_.$(OBJEXT) pr_.$(OBJEXT) \
ptx_.$(OBJEXT) sha1sum_.$(OBJEXT) sort_.$(OBJEXT) split_.$(OBJEXT) \
sum_.$(OBJEXT) tac_.$(OBJEXT) tail_.$(OBJEXT) tr_.$(OBJEXT) \
tsort_.$(OBJEXT) unexpand_.$(OBJEXT) uniq_.$(OBJEXT) wc_.$(OBJEXT) : \
$(ANSI2KNR)
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir)$$dir \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(ANSI2KNR) $(PROGRAMS) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-krextra mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic mostlyclean-kr

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-krextra distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-kr tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am


$(PROGRAMS): ../lib/libfetish.a
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
