diff -ru coreutils-6.9.original/lib/utimens.c coreutils-6.9/lib/utimens.c
--- coreutils-6.9.original/lib/utimens.c	2007-01-18 09:33:34.000000000 +0100
+++ coreutils-6.9/lib/utimens.c	2007-12-03 16:49:45.000000000 +0100
@@ -75,7 +75,7 @@
    Return 0 on success, -1 (setting errno) on failure.  */
 
 int
-futimens (int fd ATTRIBUTE_UNUSED,
+cu_futimens (int fd ATTRIBUTE_UNUSED,
 	  char const *file, struct timespec const timespec[2])
 {
   /* Some Linux-based NFS clients are buggy, and mishandle time stamps
@@ -185,5 +185,5 @@
 int
 utimens (char const *file, struct timespec const timespec[2])
 {
-  return futimens (-1, file, timespec);
+  return cu_futimens (-1, file, timespec);
 }
diff -ru coreutils-6.9.original/lib/utimens.h coreutils-6.9/lib/utimens.h
--- coreutils-6.9.original/lib/utimens.h	2007-02-23 19:25:21.000000000 +0100
+++ coreutils-6.9/lib/utimens.h	2007-12-03 16:49:36.000000000 +0100
@@ -1,3 +1,3 @@
 #include <time.h>
-int futimens (int, char const *, struct timespec const [2]);
+int cu_futimens (int, char const *, struct timespec const [2]);
 int utimens (char const *, struct timespec const [2]);
diff -ru coreutils-6.9.original/src/copy.c coreutils-6.9/src/copy.c
--- coreutils-6.9.original/src/copy.c	2007-03-18 22:36:43.000000000 +0100
+++ coreutils-6.9/src/copy.c	2007-12-03 16:48:45.000000000 +0100
@@ -518,7 +590,7 @@
       timespec[0] = get_stat_atime (src_sb);
       timespec[1] = get_stat_mtime (src_sb);
 
-      if (futimens (dest_desc, dst_name, timespec) != 0)
+      if (cu_futimens (dest_desc, dst_name, timespec) != 0)
 	{
 	  error (0, errno, _("preserving times for %s"), quote (dst_name));
 	  if (x->require_preserve)
diff -ru coreutils-6.9.original/src/touch.c coreutils-6.9/src/touch.c
--- coreutils-6.9.original/src/touch.c	2007-03-18 22:36:43.000000000 +0100
+++ coreutils-6.9/src/touch.c	2007-12-03 16:48:41.000000000 +0100
@@ -182,7 +182,7 @@
       t = timespec;
     }
 
-  ok = (futimens (fd, (fd == STDOUT_FILENO ? NULL : file), t) == 0);
+  ok = (cu_futimens (fd, (fd == STDOUT_FILENO ? NULL : file), t) == 0);
 
   if (fd == STDIN_FILENO)
     {
