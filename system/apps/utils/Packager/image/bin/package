#! /usr/bin/env orca

ORCA [
	Title:		"Package installation tool"
	Version:	0.5.1
	Author:		"Kaj de Vos"
	Rights: {
		Copyright (c) 2006-2008,2010 Kaj de Vos
		License: GPL 3 or any later version
	}
	Purpose:	"Registers and unregisters (binary) packages by managing pools of symbolic links."
	Example:	"package register example"

	Tabs:		4
]

; FIXME: ORCA bugs

recycle/off

; to-* don't copy when same type:
as-string: to-string
to-string: func [value] [as-string copy value]
as-file: to-file
to-file: func [value] [as-file copy value]


do %/system/indexes/lib/REBOL/package.library


header: system/script/header

either any [
	not args: system/script/args
	find ["help" "-h" "--help" "-help" "-?" "?"] command: args/1
][
	print "Usage: package <command> [[<package path>]<name>[/<version>] [<link pool> ...]]"
	print "<command>:"
	print "  help, -h,     Show this help information"
	print "    --help, -help, -?, (?)"
	print "  version       Show version information"
	print "  register      Register a package"
	print "  unregister    Unregister a package"
	print "Example:"
	print [" " select header 'example]
][
	either command = "version" [
		print [select header 'title  select header 'version]
		print select header 'rights
	][
		unless args/2 [
			print "Please supply a package name."
			quit/return 2
		]
		package: package-image/new args/2

		stages: copy []
		foreach stage  next next args [
			append stages  stage-proto/new package/root stage
		]

		switch/default command [
			"register" [
				unless either empty? stages [package/register] [package/register/stages stages]
					[quit/return 10]
			]
			"unregister" [
				unless either empty? stages [package/unregister] [package/unregister/stages stages]
					[quit/return 20]
			]
		][
			print "Command unknown."
			quit/return 1
		]
	]
]
