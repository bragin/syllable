
/*  libatheos.so - the highlevel API library for AtheOS
 *  Copyright (C) 1999 - 2001 Kurt Skauen
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of version 2 of the GNU Library
 *  General Public License as published by the Free Software
 *  Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Library General Public License for more details.
 *
 *  You should have received a copy of the GNU Library General Public
 *  License along with this library; if not, write to the Free
 *  Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
 *  MA 02111-1307, USA
 */
#include <gui/requesters.h>
#include <gui/desktop.h>
#include <gui/font.h>
#include <util/invoker.h>

using namespace os;

static const struct
{
	uint width;
	uint height;
	uint bytes_per_pixel;	/* 3:RGB, 4:RGBA */
	uint8 pixel_data[32 * 32 * 4 + 1];
} nQuestion_Icon =
{
32, 32, 4,
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Hi\253\10Hh\252<"
		"Jl\257aKl\260wLl\260yKl\261fJj\255MHi\253%Ij\256\1\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Gg\250"
		"\7Gf\246YJk\256\272Lm\260\370Mo\262\377Rs\264\377Yx\267\377Zy\270\377Uu\266"
		"\377Mo\262\377Mn\262\377Kk\256\355Jk\256\247Ff\245XGg\247\6\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Gg\246\4Gf\245kJk\255\352Mo\262\377Vv\266"
		"\377p\213\301\377\215\242\316\377\236\261\325\377\247\270\331\377\253\273"
		"\332\377\247\270\331\377\233\256\324\377\202\231\311\377b\200\273\377Mo\262"
		"\377Ln\262\377Ij\253\350Ec\241l%6X\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Ec\237,Ii\252"
		"\325Mn\262\377No\262\377c\200\273\377\212\240\314\377\242\264\327\377\257"
		"\276\334\377\266\304\340\377\275\311\342\377\303\317\345\377\310\323\347"
		"\377\312\324\350\377\305\320\346\377\262\301\336\377\212\240\314\377Ww\266"
		"\377Mo\262\377Km\261\377Fe\245\3048Q\202\33\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Ec\240SJj\254\363Mn\262"
		"\377No\262\377Pq\263\377i\206\276\377|\225\306\377\203\232\311\377\206\234"
		"\312\377\212\240\314\377\223\250\320\377\240\262\325\377\257\276\334\377"
		"\276\313\343\377\312\324\350\377\314\326\351\377\276\312\343\377\225\251"
		"\321\377Ww\266\377Mo\262\377Km\260\377Fd\244\331-@g\36\0\0\0\1\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Db\236RHi\253\374Ln\260\377"
		"Mo\261\377Op\263\377Oq\263\377Pq\263\377Pq\263\377Pq\263\377Pq\263\377Pr"
		"\263\377Uv\265\377`~\271\377u\217\303\377\220\246\317\377\251\272\332\377"
		"\273\310\341\377\277\314\343\377\257\276\334\377{\225\306\377Oq\263\377M"
		"o\261\377Kl\257\377A^\231\272\0\0\0\14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0C`\234#Gf\250\363Jl\260\377Ln\261\377No\262\377Op\263\377O"
		"q\263\377Oq\264\377Pq\264\377Pq\264\377Pq\264\377Pq\264\377Pq\264\377Qr\264"
		"\377Qr\264\377[{\271\377z\224\306\377\227\253\322\377\250\270\331\377\246"
		"\270\331\377\210\237\314\377Rs\265\377Op\263\377Ln\261\377Hh\252\377.BlY"
		"\0\0\0\7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Fd\242\255Kl\260\377Lm\262"
		"\377No\263\377Oq\263\377Pr\264\377Pr\264\377Qr\264\377Pr\264\377Pr\264\377"
		"Pr\265\377Pr\265\377Ps\265\377Qs\266\377Su\266\377Su\267\377Wx\270\377n\213"
		"\302\377\205\236\314\377\214\244\317\377z\225\307\377Uv\267\377Rt\266\377"
		"Oq\264\377Ln\262\377=V\214\265\0\0\0\31\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0F"
		"d\240\32Ii\252\374Ln\262\377Mo\263\377Oq\264\377Pr\265\377Pr\265\377Qs\265"
		"\377Qs\265\377Pr\266\377Ih\244\347.Bh\237\32%9|\21\31'p\33&<z<S\203\263S"
		"u\265\374Vy\272\377X{\273\377c\204\300\377l\213\303\377`\201\276\377Wz\272"
		"\377Ux\271\377Su\270\377Oq\265\377Ec\237\346\0\0\0.\0\0\0\7\0\0\0\0\0\0\0"
		"\0\0\0\0\0He\241[Mm\261\377Oo\264\377Pp\265\377Pq\266\377Pq\266\377Pr\267"
		"\377Qr\270\377Qr\270\377Fc\235\337\7\12\17j\0\0\0Y\0\0\0J\0\0\0<\0\0\0:\0"
		"\0\0?>V\205\242X{\275\377Z}\277\377[~\277\377[~\300\377[~\277\377Z}\276\377"
		"X{\276\377Ux\274\377St\271\377Kk\252\371\0\0\0@\0\0\0\16\0\0\0\0\0\0\0\0"
		"\0\0\0\0Jg\243`Ll\255\324Ii\247\335Hg\245\341Hh\246\340Ih\246\340Ih\247\340"
		"Ii\247\341Jh\246\341)9Z\222\0\0\0T\0\0\0" "1\0\0\0\24\0\0\0\15\0\0\0\11\0"
		"\0\0\17" "5HmAY{\273\377]\201\302\377^\202\302\377^\202\302\377^\202\302\377"
		"]\201\302\377[\177\301\377X|\277\377Ux\274\377Nn\256\375\0\0\0J\0\0\0\24"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4\0\0\0)\0\0\0R\0\0\0Z\0\0\0Z\0\0\0Y\0\0\0"
		"Y\0\0\0X\0\0\0Z\0\0\0T\0\0\0" "4\0\0\0\14\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0"
		"Kf\232\35]\177\277\377a\206\310\377b\206\310\377b\207\310\377b\206\310\377"
		"`\204\307\377^\202\306\377[\177\303\377X{\301\377On\255\363\0\0\0M\0\0\0"
		"\26\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\22\0\0\0%\0\0\0)\0\0\0(\0\0\0'"
		"\0\0\0'\0\0\0(\0\0\0'\0\0\0&\0\0\0\21\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0[|\267Yb\207\310\377e\212\314\377e\213\314\377e\213\314\377d\212\313"
		"\377c\210\312\377a\205\311\377]\202\306\377Z~\303\377He\234\326\0\0\0K\0"
		"\0\0\26\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\0\0\0\3\0\0\0\3\0\0\0\4\0"
		"\0\0\2\0\0\0\2\0\0\0\3\0\0\0\4\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0_\202\302]d\212\313\360h\217\322\377i\220\322\377i\220\322\377h\217"
		"\321\377g\216\320\377e\214\317\377b\211\314\377_\205\312\377[\200\304\377"
		"5Ip\241\0\0\0F\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0`\201\301\36c\210\313\266h\217\325\377k\223\327\377l\224\327\377l\224"
		"\327\377k\224\326\377j\223\326\377i\220\324\377g\216\322\377d\212\320\377"
		"`\206\314\377Ss\260\346\6\10\14e\0\0\0" "6\0\0\0\13\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0c\206\310cg\216\324\364l\224\333\377n\226\334\377"
		"p\230\334\377p\231\335\377p\230\334\377o\227\334\377n\225\332\377k\223\330"
		"\377h\217\325\377e\213\322\377[~\276\360\33%7z\0\0\0Q\0\0\0\40\0\0\0\4\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0d\207\311hj\222\332\377m\226\337\377"
		"p\231\341\377r\233\342\377s\234\342\377s\234\343\377r\233\341\377q\232\340"
		"\377o\227\336\377l\224\334\377h\220\330\377Xw\264\333\26\36-t\0\0\0X\0\0"
		"\0" "1\0\0\0\10\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0e\211\310\16j\220\324"
		"\363o\231\337\377r\234\341\377t\236\343\377v\240\343\377w\240\343\377v\240"
		"\343\377u\237\341\377s\235\340\377p\231\336\377f\214\316\362>T|\241\2\2\3"
		"b\0\0\0S\0\0\0" "2\0\0\0\16\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0g\213\314No\230\334\377s\235\337\377v\241\341\377x\244\343\377z\244\343"
		"\377y\245\343\377x\243\342\377v\242\341\377t\236\337\377^\200\271\325\20"
		"\25\37m\0\0\0]\0\0\0F\0\0\0&\0\0\0\13\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0k\220\317nt\237\335\377v\242\337\377y\245\341\377{\247"
		"\343\377|\250\343\377|\247\342\377{\247\341\377x\244\340\377p\230\326\373"
		"\20\26\40o\0\0\0R\0\0\0" "2\0\0\0\26\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0m\222\323xv\241\335\377y\243\337\377|\247"
		"\341\377~\250\342\377\177\251\342\377~\251\341\377|\246\341\377y\243\336"
		"\377g\214\306\343\0\0\0X\0\0\0.\0\0\0\12\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0j\216\313'Tp\232mBXx\216"
		"BXw\221CXw\222CXw\222BXv\222AVt\223?Ts\2223Ea\205\0\0\0I\0\0\0\27\0\0\0\1"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\4\0\0\0\"\0\0\0?\0\0\0D\0\0\0F\0\0\0C\0\0\0D\0\0\0D\0\0\0"
		"C\0\0\0E\0\0\0/\0\0\0\13\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0p\225\315\23l\213\277;c\177\257A"
		"f\203\262@f\203\260Ae\202\257Ad\200\256Bd\200\260Ab}\254A]{\251<\0\0\0\13"
		"\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0r\230\331Z{\240\334\377~\242\336\377\200\244\337"
		"\377\202\245\340\377\202\245\340\377\200\245\337\377~\242\336\377}\240\334"
		"\377t\232\330\352\0\0\0\11\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0q\226\327[z\237\333\377"
		"}\240\334\377\177\243\336\377\200\244\337\377\200\245\337\377\177\243\336"
		"\377}\240\334\377|\237\333\377q\227\323\356\0\0\0" "0\0\0\0\12\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0o\225\325[y\235\331\377|\237\333\377}\240\334\377}\241\335\377~\241\335"
		"\377}\240\334\377|\237\333\377{\235\331\377o\224\317\361\0\0\0H\0\0\0\23"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0o\224\323[x\234\327\377z\235\331\377{\236\332\377|\237\333"
		"\377|\237\333\377{\236\332\377{\235\331\377y\234\327\377o\223\316\361\0\0"
		"\0K\0\0\0\23\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" "\0\0\0\0\0\0\0\0\0\0\0\0\0\0m\223\322[w\233\326\377y\233\326\377z\234\327" "\377z\234\330\377z\234\330\377z\234\327\377y\233\326\377x\233\326\377n\222" "\315\361\0\0\0L\0\0\0\23\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4\0\0\0)\0\0\0V\0\0\0`\0\0" "\0`\0\0\0a\0\0\0`\0\0\0`\0\0\0_\0\0\0a\0\0\0G\0\0\0\22\0\0\0\0\0\0\0\0\0" "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" "\0\0\2\0\0\0\24\0\0\0.\0\0\0" "3\0\0\0" "1\0\0\0" "2\0\0\0" "4\0\0\0" "3\0\0\0" "" "3\0\0\0" "0\0\0\0$\0\0\0\12\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" "\0\0\0\0\0\0\0\0\0\0\0\0\0\0",};



static const struct
{
	uint width;
	uint height;
	uint bytes_per_pixel;	/* 3:RGB, 4:RGBA */
	uint8 pixel_data[32 * 32 * 4 + 1];
} nInfo_Icon =
{
32, 32, 4,
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\344\361"
		"\377\37\313\345\377V\270\334\377V\270\334\377V\243\330\377V\270\334\377V"
		"\276\337\3771\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\313\346\377\3\306\344\377;\264"
		"\336\377\273\213\323\377\362p\317\377\377p\321\377\377y\326\377\377z\326"
		"\377\377o\323\377\377_\315\377\366Y\311\377\353\210\325\377\345\250\335\377"
		"d\307\347\377\14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\323\351\377/\260\334\377\255\211\324\377\377\231\335\377\377\311"
		"\354\377\377\361\370\377\377\364\371\377\377\364\371\377\377\364\371\377"
		"\377\364\371\377\377\364\371\377\377\347\365\377\377\262\345\377\377o\321"
		"\377\377g\314\377\327\241\335\377O\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\304\342\377B\237\330\377\363\227\331\377\377\332\357\377\377\353"
		"\364\377\377\353\364\377\377\353\364\377\377\353\364\377\377\353\364\377"
		"\377\353\364\377\377\353\364\377\377\353\364\377\377\353\364\377\377\353"
		"\364\377\377\350\363\377\377\273\346\377\377W\310\377\363\213\330\377\226"
		"\226\331\377\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\273\335\377>\220\323\377\364\245\335"
		"\377\377\340\357\377\377\340\357\377\377\340\357\377\377\340\357\377\377"
		"\340\357\377\377\340\357\377\377\344\361\377\377\347\363\377\377\343\360"
		"\377\377\340\357\377\377\340\357\377\377\340\357\377\377\340\357\377\377"
		"\340\357\377\377\327\355\377\377e\313\377\377[\310\377\223o\320\377\3\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\302\341\3772\213\321\377\354\222\325\377\377\327\352\377\377\327\352"
		"\377\377\327\352\377\377\327\352\377\377\327\352\377\377\327\352\377\377"
		"\340\357\377\377\373\375\377\377\377\377\377\377\367\373\377\377\334\355"
		"\377\377\327\352\377\377\327\352\377\377\327\352\377\377\327\352\377\377"
		"\327\352\377\377\314\347\377\377O\303\377\377c\312\377\203\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\334\355\377\22"
		"\250\331\377\337]\305\377\377\311\344\377\377\316\346\377\377\316\346\377"
		"\377\316\346\377\377\316\346\377\377\316\346\377\377\316\346\377\377\356"
		"\366\377\377\377\377\377\377\377\377\377\377\377\377\377\377\346\362\377"
		"\377\316\346\377\377\316\346\377\377\316\346\377\377\316\346\377\377\316"
		"\346\377\377\316\346\377\377\254\334\377\3770\270\377\375j\314\377H\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\301\341\377\207"
		"P\277\377\377\215\320\377\377\304\340\377\377\304\340\377\377\304\340\377"
		"\377\304\340\377\377\304\340\377\377\304\340\377\377\304\340\377\377\362"
		"\370\377\377\377\377\377\377\377\377\377\377\377\377\377\377\345\362\377"
		"\377\304\340\377\377\304\340\377\377\304\340\377\377\304\340\377\377\304"
		"\340\377\377\304\340\377\377\304\340\377\377K\275\377\377=\273\377\344w\317"
		"\377\11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\320\350\377\15\223"
		"\322\377\362+\263\377\377\247\326\377\377\272\333\377\377\272\333\377\377"
		"\272\333\377\377\272\333\377\377\272\333\377\377\272\333\377\377\272\333"
		"\377\377\360\367\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
		"\341\357\377\377\272\333\377\377\272\333\377\377\272\333\377\377\272\333"
		"\377\377\272\333\377\377\272\333\377\377\272\333\377\377o\306\377\377\40"
		"\260\377\377t\313\377\217\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\305\343\377qO\274\377\377)\260\377\377\244\323\377\377\257\326\377\377\257"
		"\326\377\377\257\326\377\377\257\326\377\377\257\326\377\377\257\326\377"
		"\377\257\326\377\377\355\366\377\377\377\377\377\377\377\377\377\377\377"
		"\377\377\377\335\355\377\377\257\326\377\377\257\326\377\377\257\326\377"
		"\377\257\326\377\377\257\326\377\377\257\326\377\377\257\326\377\377r\304"
		"\377\377!\256\377\377E\272\377\357\323\352\377%\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\255\332\377\300)\256\377\377)\257\377\377\226\315\377\377"
		"\246\321\377\377\246\321\377\377\246\321\377\377\246\321\377\377\246\321"
		"\377\377\246\321\377\377\246\321\377\377\353\365\377\377\377\377\377\377"
		"\377\377\377\377\377\377\377\377\330\353\377\377\246\321\377\377\246\321"
		"\377\377\246\321\377\377\246\321\377\377\246\321\377\377\246\321\377\377"
		"\246\321\377\377g\300\377\377#\255\377\377*\257\377\377\205\317\377`\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\346\362\377\21\200\311\377\342%\253\377\377"
		"&\253\377\377t\301\377\377\234\314\377\377\234\314\377\377\234\314\377\377"
		"\234\314\377\377\234\314\377\377\234\314\377\377\234\314\377\377\351\364"
		"\377\377\377\377\377\377\377\377\377\377\377\377\377\377\324\351\377\377"
		"\234\314\377\377\234\314\377\377\234\314\377\377\234\314\377\377\234\314"
		"\377\377\234\314\377\377\233\314\377\377F\264\377\377%\253\377\377%\253\377"
		"\377_\277\377\241\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\321\350\377<j\301\377\377"
		"'\252\377\377'\252\377\377E\262\377\377\217\306\377\377\222\307\377\377\222"
		"\307\377\377\222\307\377\377\222\307\377\377\222\307\377\377\222\307\377"
		"\377\347\363\377\377\377\377\377\377\377\377\377\377\377\377\377\377\320"
		"\347\377\377\222\307\377\377\222\307\377\377\222\307\377\377\222\307\377"
		"\377\222\307\377\377\222\307\377\377~\302\377\377+\253\377\377'\252\377\377"
		"'\252\377\377\\\274\377\340\327\350\377\4\0\0\0\0\0\0\0\0\0\0\0\0\276\337"
		"\377<T\270\377\377)\251\377\377)\251\377\377+\251\377\377d\271\377\377\210"
		"\302\377\377\211\302\377\377\211\302\377\377\211\302\377\377\211\302\377"
		"\377\211\302\377\377\345\361\377\377\377\377\377\377\377\377\377\377\377"
		"\377\377\377\314\345\377\377\211\302\377\377\211\302\377\377\211\302\377"
		"\377\211\302\377\377\211\302\377\377\204\301\377\377B\260\377\377)\251\377"
		"\377)\251\377\377)\251\377\377U\271\377\377\236\323\377\6\0\0\0\0\0\0\0\0"
		"\0\0\0\0\270\334\377<P\265\377\377+\250\377\377+\250\377\377+\250\377\377"
		"/\251\377\377b\265\377\377~\275\377\377~\275\377\377~\275\377\377~\275\377"
		"\377~\275\377\377\342\360\377\377\377\377\377\377\377\377\377\377\377\377"
		"\377\377\307\342\377\377~\275\377\377~\275\377\377~\275\377\377~\275\377"
		"\377y\273\377\377I\257\377\377+\250\377\377+\250\377\377+\250\377\377+\250"
		"\377\377J\264\377\377\177\307\377\6\0\0\0\0\0\0\0\0\0\0\0\0\273\336\377<"
		"R\264\377\377-\246\377\377-\246\377\377-\246\377\377-\246\377\3770\247\377"
		"\377P\257\377\377r\270\377\377v\271\377\377v\271\377\377v\271\377\377\335"
		"\355\377\377\377\377\377\377\377\377\377\377\377\377\377\377\304\341\377"
		"\377v\271\377\377v\271\377\377v\271\377\377g\265\377\377?\253\377\377-\247"
		"\377\377-\246\377\377-\246\377\377-\246\377\377-\246\377\377H\261\377\377"
		"u\302\377\6\0\0\0\0\0\0\0\0\0\0\0\0\316\347\377<X\266\377\3770\245\377\377"
		"0\245\377\3770\245\377\3770\245\377\3770\245\377\3770\245\377\3776\247\377"
		"\377O\255\377\377b\261\377\377i\263\377\377\266\331\377\377\377\377\377\377"
		"\377\377\377\377\375\376\377\377\240\316\377\377g\263\377\377\\\260\377\377"
		"D\252\377\3772\245\377\3770\245\377\3770\245\377\3770\245\377\3770\245\377"
		"\3770\245\377\3770\245\377\377V\264\377\377\226\316\377\6\0\0\0\0\0\0\0\0"
		"\0\0\0\0\334\355\377\21^\267\377\3421\243\377\3771\243\377\3771\243\377\377"
		"1\243\377\3771\243\377\3771\243\377\3771\243\377\3771\243\377\3772\244\377"
		"\377:\246\377\377F\252\377\377\246\327\377\377\316\351\377\377\224\317\377"
		"\377C\251\377\3776\245\377\3771\244\377\3771\243\377\3771\243\377\3771\243"
		"\377\3771\243\377\3771\243\377\3771\243\377\3771\243\377\3771\243\377\377"
		"]\265\377\343\311\341\377\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\200\304\377\321"
		"3\243\377\3773\243\377\3773\243\377\3773\243\377\3773\243\377\3773\243\377"
		"\3773\243\377\3773\243\377\3773\243\377\3773\243\377\3773\243\377\3775\244"
		"\377\377<\247\377\3774\243\377\3773\243\377\3773\243\377\3773\243\377\377"
		"3\243\377\3773\243\377\3773\243\377\3773\243\377\3773\243\377\3773\243\377"
		"\3773\243\377\3773\243\377\377]\264\377\241\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\235\320\377q8\243\377\3776\242\377\3776\242\377\3776\242\377\377"
		"6\242\377\3776\242\377\3776\242\377\3776\242\377\3776\242\377\3776\242\377"
		"\377@\247\377\377\252\330\377\377\324\353\377\377\231\320\377\377=\245\377"
		"\3776\242\377\3776\242\377\3776\242\377\3776\242\377\3776\242\377\3776\242"
		"\377\3776\242\377\3776\242\377\3776\242\377\377:\243\377\377z\276\377`\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\304\342\377\40Z\260\377\3777\240\377"
		"\3777\240\377\3777\240\377\3777\240\377\3777\240\377\3777\240\377\3777\240"
		"\377\3777\240\377\3777\240\377\377\233\320\377\377\377\377\377\377\377\377"
		"\377\377\375\376\377\377\200\303\377\3777\240\377\3777\240\377\3777\240\377"
		"\3777\240\377\3777\240\377\3777\240\377\3777\240\377\3777\240\377\3777\240"
		"\377\377M\251\377\357\272\331\377%\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\323\351\377\0}\300\377\233;\237\377\377:\237\377\377:\237\377\377:\237"
		"\377\377:\237\377\377:\237\377\377:\237\377\377:\237\377\377:\237\377\377"
		"\277\337\377\377\377\377\377\377\377\377\377\377\377\377\377\377\250\324"
		"\377\377:\237\377\377:\237\377\377:\237\377\377:\237\377\377:\237\377\377"
		":\237\377\377:\237\377\377:\237\377\377:\237\377\377u\272\377\236\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\277\337\377.[\256\377\364"
		"<\236\377\377<\236\377\377<\236\377\377<\236\377\377<\236\377\377<\236\377"
		"\377<\236\377\377<\236\377\377\226\313\377\377\377\377\377\377\377\377\377"
		"\377\374\376\377\377~\277\377\377<\236\377\377<\236\377\377<\236\377\377"
		"<\236\377\377<\236\377\377<\236\377\377<\236\377\377<\236\377\377F\243\377"
		"\344\254\323\377$\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0u\271\377RF\241\377\377>\235\377\377>\235\377\377>\235\377\377>\235"
		"\377\377>\235\377\377>\235\377\377>\235\377\377C\237\377\377\235\315\377"
		"\377\306\342\377\377\215\304\377\377B\236\377\377>\235\377\377>\235\377\377"
		">\235\377\377>\235\377\377>\235\377\377>\235\377\377>\235\377\377C\237\377"
		"\375Y\252\377H\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\345\362\377\7\222\307\377\262E\237\377\377?\234\377\377?\234"
		"\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377\377"
		"?\234\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377"
		"\377?\234\377\377?\234\377\377?\234\377\377?\234\377\377B\235\377\377T\246"
		"\377\203\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\334\354\377\15\215\303\377\277@\235\377\377?\234"
		"\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377\377"
		"?\234\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377"
		"\377?\234\377\377?\234\377\377?\234\377\377A\235\377\377S\245\377\223a\254"
		"\377\3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\304\337\377\2p\265\377oO\244\377\373?\234"
		"\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377\377"
		"?\234\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377"
		"\377?\234\377\377D\237\377\363v\267\377\226a\254\377\1\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
		"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\237\315\377Hk\262\377\310E\237\377\377?\234"
		"\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377\377?\234\377\377"
		"?\234\377\377?\234\377\377?\234\377\377C\236\377\377M\242\377\255`\254\377"
		"/\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" "\311\342\377\10\244\317\377Qn\263\377\247V\247\377\353H\241\377\373E\237" "\377\377F\237\377\377F\240\377\377E\237\377\366Q\245\377\353S\246\377\221" "t\265\377;l};


static const struct
{
	unsigned int width;
	unsigned int height;
	unsigned int bytes_per_pixel;	/* 3:RGB, 4:RGBA */
	unsigned char pixel_data[32 * 32 * 4 + 1];
} nWarning_Icon =
{
32, 32, 4,
		"3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f"
		"\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\313"
		"\0" "3f\313\0" "3f\313\0" "3f\313\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3"
		"f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314"
		"\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"" "6h\314\0m\215\305\0m\215\305\6\256\272\261\33\247\255\2259Yw\242#2d\310"
		"\0" "3f\313\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3"
		"f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314"
		"\0" "3f\314\0" "3f\314\0" "3f\314\0p\217\301\0p\217\301,\363\355\266\207\377"
		"\360\236\233\377\343V\276\351\306$\247Gb\210\5" "1c\307\0" "3f\314\0" "3f\314"
		"\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3"
		"f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0;k\312"
		"\0;k\312\4\326\322\250\215\377\357\237\377\377\354u\377\377\3430\377\372"
		"\316\3\377\244\220'U%M\231\0" "3f\313\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f"
		"\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314"
		"\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0r\216\272\0r\216\272$\377\352\215"
		"\334\377\357e\377\377\360/\377\377\346\14\377\366\317\0\377\332\262\10\231"
		"DUi\20" "2d\307\0" "3f\313\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314"
		"\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3"
		"f\314\0" "8i\313\0" "8i\313\1\322\316\233\213\377\354s\377\377\362.\377\377"
		"\362\10\377\377\355\0\377\371\336\1\377\350\301\0\307\221\202.H&J\225\0" "3"
		"e\313\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314"
		"\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0t\216\267\0t"
		"\216\267\37\373\350\210\377\377\360P\377\377\365\23\377\377\361\2\377\377"
		"\357\0\377\376\355\1\377\361\324\0\360\323\255\7|BRh\2" "2d\310\0" "3f\314"
		"\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3"
		"f\314\0" "3f\314\0" "3f\314\0" "3f\314\0;k\311\0;k\311\2\311\310\235\230\377"
		"\354t\377\377\364*\377\377\364\7\377\377\357\0\377\377\357\0\377\377\357"
		"\0\377\373\346\1\377\350\300\0\306\212~1\"&J\226\0" "2e\312\0" "3f\314\0" "3"
		"f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314"
		"\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"" "3f\314\0" "3f\314\0k\212\273\0k\212\2737\372\347\205\361\377\360Q\377\377"
		"\363\25\377\377\361\2\377\377\357\0\377\377\357\0\377\377\357\0\377\376\356"
		"\0\377\360\321\1\377\326\255\6\2238Or\1" "2e\311\0" "3f\314\0" "3f\314\0" "3"
		"f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314"
		"\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"" "7h\313\0" "7h\313\5\312\311\235\322\377\355r\377\377\361-\377\377\363\11"
		"\377\355\340\0\377\221\211\0\377|s\0\377\326\311\0\377\376\356\0\377\371"
		"\343\1\377\346\275\0\365\212~2,%K\230\0" "3e\313\0" "3f\314\0" "3f\314\0" "3"
		"f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314"
		"\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"e\206\275:\375\351\206\377\377\356U\377\377\363\27\377\377\363\4\377xp\0"
		"\377\2\1\0\377\0\0\0\37794\0\377\367\346\0\377\375\353\2\377\361\315\1\377"
		"\315\250\11\314;Pq\10" "2e\311\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3"
		"f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314"
		"\0" "3f\314\0" "3f\314\0" "3f\314\0" "7h\313\0" "7h\313\3\302\302\237\210\377"
		"\353x\377\377\3615\377\377\365\14\377\377\357\0\377;8\0\377\0\0\0\377\3\3"
		"\3\377\16\15\13\377\360\333\0\377\376\355\2\377\370\337\2\377\346\272\0\365"
		"\203z6h%K\231\1" "3f\313\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314"
		"\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"" "3f\314\0" "3f\314\0c\205\276\0c\205\276\15\370\347\213\321\377\356[\377"
		"\377\364\33\377\377\361\4\377\377\357\0\377SN\0\377\0\0\0\377%%%\377\\ZE"
		"\377\364\336\2\377\377\346\0\377\375\351\2\377\357\312\1\377\315\247\12\330"
		"8Ns4+Y\261\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0"
		"" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "8"
		"i\312\0" "8i\312\0\276\301\240E\377\352~\371\377\3618\377\377\361\15\377\377"
		"\357\0\377\377\357\0\377\222\207\0\377\0\0\0\377&&&\377zo,\377\372\340\1"
		"\377\377\340\0\377\376\347\1\377\371\332\3\377\345\271\0\377\201x7\241%L"
		"\233\13" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314\0" "3f\314"
		"\0?o\317\0?o\317\0?o\317\0?o\317\0?o\317\0?o\317\0j\212\277\0j\212\277\11"
		"\370\347\216\315\377\355`\377\377\364\36\377\377\357\6\377\377\355\0\377"
		"\377\351\0\377\275\255\0\377\6\6\1\377GGG\377\220\204\36\377\377\342\0\377"
		"\377\336\0\377\377\342\1\377\374\343\3\377\354\305\0\377\320\252\10\3509"
		"Pxc=m\312\0?o\317\0?o\317\0?o\317\0?o\317\0?o\317\0?o\317\0\377\377\377\0"
		"\377\377\377\0\377\377\377\0\377\377\377\0\377\377\377\0\377\377\375\0\377"
		"\377\375\1\377\361\261l\377\353\177\377\377\360>\377\377\361\16\377\377\354"
		"\1\377\377\350\0\377\377\347\0\377\355\326\0\377\24\21\3\377FFB\377\273\251"
		"\21\377\377\341\0\377\377\336\0\377\377\333\0\377\375\343\2\377\367\326\2"
		"\377\343\271\0\373\273\244H\307\303\303\302#\377\377\377\0\377\377\377\0"
		"\377\377\377\0\377\377\377\0\377\377\377\0\377\377\377\0\377\377\377\0\377"
		"\377\377\0\377\377\377\0\377\377\377\0\377\377\377\0\376\373\352\0\376\373"
		"\352<\377\355\217\361\377\351g\377\377\362#\377\377\356\6\377\377\350\0\377"
		"\377\347\0\377\377\345\0\377\377\345\0\3776/\6\377ONE\377\330\276\7\377\377"
		"\340\0\377\377\334\0\377\377\327\0\377\377\334\1\377\374\341\5\377\355\305"
		"\0\377\327\257\17\361\254\251\225\232\336\336\336\13\377\377\377\0\377\377"
		"\377\0\377\377\377\0\377\377\377\0\377\377\377\0\377\377\377\0\377\377\377"
		"\0\377\377\377\0\377\377\377\0\377\377\376\0\377\377\376\16\377\362\263\314"
		"\377\352\202\377\377\355C\377\377\361\20\377\377\353\2\377\377\347\0\377"
		"\377\344\0\377\377\344\0\377\377\341\0\377se\7\377ga<\377\360\320\3\377\377"
		"\335\0\377\377\327\0\377\377\322\0\377\377\322\0\377\377\335\4\377\367\325"
		"\3\377\344\267\0\377\273\244J\352\301\301\300R\364\364\364\2\377\377\377"
		"\0\377\377\377\0\377\377\377\0\377\377\377\0\377\377\377\0\377\377\377\0"
		"\377\377\377\0\377\377\377\0\377\372\344\0\377\372\344r\377\354\222\377\377"
		"\352i\377\377\361%\377\377\354\7\377\377\347\0\377\377\344\0\377\377\341"
		"\0\377\377\342\0\377\377\340\0\377\247\222\5\377vk0\377\376\322\0\377\377"
		"\321\0\377\377\317\0\377\377\317\0\377\377\316\0\377\376\322\1\377\374\337"
		"\5\377\356\304\0\377\330\257\15\375\255\247\221\274\337\337\337%\377\377"
		"\377\0\377\377\377\0\377\377\377\0\377\377\377\0\377\377\377\0\377\377\377"
		"\0\377\377\377\0\377\377\375\0\377\377\375\15\377\361\266\335\377\352\207"
		"\377\377\360H\377\377\360\22\377\377\350\2\377\377\345\0\377\377\341\0\377"
		"\377\336\0\377\377\340\0\377\377\337\0\377\333\271\4\377\240\207\37\377\377"
		"\316\0\377\377\316\0\377\377\316\0\377\377\316\0\377\377\316\0\377\377\317"
		"\0\377\376\336\4\377\365\322\1\377\345\271\1\377\270\243I\365\304\304\303"
		"v\363\363\363\2\377\377\377\0\377\377\377\0\377\377\377\0\377\377\377\0\377"
		"\377\377\0\377\377\377\0\377\377\377\1\377\374\344i\376\354\222\377\377\352"
		"p\377\377\356&\377\377\347\7\377\377\341\0\377\377\340\0\377\377\336\0\377"
		"\377\336\0\377\377\336\0\377\377\334\0\377\371\321\4\377\335\270\27\377\377"
		"\316\0\377\377\316\0\377\377\316\0\377\377\316\0\377\377\316\0\377\377\316"
		"\0\377\377\325\1\377\374\336\5\377\356\303\0\377\332\261\12\377\252\246\231"
		"\307\336\336\336#\377\377\377\0\377\377\377\0\377\377\377\0\377\377\377\0"
		"\377\377\377\0\377\377\376\0\377\377\376\"\377\361\263\324\377\354\206\377"
		"\377\352P\377\377\351\26\377\377\340\3\377\377\334\0\377\377\334\0\377\377"
		"\331\0\377\377\330\0\377\377\331\0\377\374\324\0\377\332\263\0\377\317\247"
		"\0\377\366\307\0\377\377\316\0\377\377\316\0\377\377\316\0\377\377\316\0"
		"\377\377\315\0\377\377\316\0\377\377\335\4\377\365\322\2\377\347\270\0\377"
		"\274\244G\371\302\302\302\201\377\377\377\0\377\377\377\0\377\377\377\0\377"
		"\377\377\0\377\377\377\0\377\377\377\11\377\372\347\210\377\354\217\365\376"
		"\347r\377\377\3520\377\377\337\12\377\377\324\1\377\377\323\0\377\377\322"
		"\0\377\377\317\0\377\377\322\0\377\377\317\0\377\250\211\0\377\25\21\0\377"
		"\12\10\0\377oY\0\377\373\313\0\377\377\316\0\377\377\316\0\377\377\316\0"
		"\377\377\314\0\377\377\315\0\377\377\326\2\377\374\336\4\377\355\304\0\377"
		"\330\261\15\377\256\252\223\336\376\376\376\0\377\377\377\0\377\377\377\0"
		"\377\377\377\0\377\377\377\6\377\377\374g\377\361\256\333\377\354\206\377"
		"\377\351T\377\377\346\34\377\377\324\3\377\377\316\0\377\377\316\0\377\377"
		"\316\0\377\377\316\0\377\377\316\0\377\377\316\0\377H;\0\377\0\0\0\377\12"
		"\12\12\377\36\32\21\377\362\303\0\377\377\316\0\377\377\316\0\377\377\316"
		"\0\377\377\315\0\377\377\314\0\377\377\317\0\377\377\336\5\377\365\321\1"
		"\377\344\266\0\377\274\243D\376\364\364\364\0\377\377\377\0\377\377\377\0"
		"\377\377\377\0\377\377\377U\377\371\332\307\377\351\206\377\377\346r\377"
		"\377\341:\377\377\330\16\377\377\316\0\377\377\315\0\377\377\316\0\377\377"
		"\316\0\377\377\316\0\377\377\316\0\377\377\316\0\377xa\0\377\31\31\27\377"
		"{{y\377\232\217_\377\372\312\2\377\377\316\0\377\377\316\0\377\377\316\0"
		"\377\377\316\0\377\377\315\0\377\377\315\0\377\377\323\1\377\371\324\2\377"
		"\345\270\0\377\322\251\14\377\335\335\335\0\374\374\374\0\377\377\377\0\377"
		"\377\375\0\377\377\375l\377\353\217\371\377\340\\\377\377\340O\377\377\330"
		"\40\377\377\316\4\377\377\313\0\377\377\313\0\377\377\313\0\377\377\313\0"
		"\377\377\313\0\377\377\313\0\377\377\313\0\377\355\277\0\377\250\213\26\377"
		"\307\254I\377\361\305\30\377\377\313\0\377\377\313\0\377\377\313\0\377\377"
		"\313\0\377\377\313\0\377\377\313\0\377\377\312\0\377\376\314\0\377\365\307"
		"\0\377\335\260\0\377\311\241\0\377\301\301\301\0\363\363\363\0\377\377\377"
		"\0\377\377\375\0\377\377\375\32\376\340V\331\371\313\13\377\361\300\4\377"
		"\344\265\0\377\337\261\0\377\335\261\0\377\335\261\0\377\335\261\0\377\336"
		"\261\0\377\336\262\0\377\335\262\0\377\335\261\0\377\335\261\0\377\335\261"
		"\0\377\335\260\0\377\335\261\0\377\335\261\0\377\335\262\0\377\335\262\0"
		"\377\336\261\0\377\335\261\0\377\334\261\0\377\334\262\0\377\333\256\0\377"
		"\320\250\0\377\300\231\0\377\273\226\0\377\254\254\254\0\347\347\347\0\376"
		"\376\376\0\377\377\377\0\377\377\377\3\365\336\210y\334\256\3\377\311\241"
		"\0\377\276\232\0\377\275\232\0\377\275\230\0\377\274\230\0\377\274\230\0"
		"\377\275\227\0\377\275\230\0\377\275\227\0\377\274\230\0\377\274\230\0\377"
		"\275\230\0\377\274\231\0\377\274\231\0\377\275\230\0\377\274\230\0\377\274"
		"\230\0\377\275\227\0\377\274\230\0\377\275\230\0\377\274\231\0\377\275\227"
		"\0\377\272\227\0\377\272\227\0\377\271\225\3\377\253\253\253\1\350\350\350"
		"\0\376\376\376\0\377\377\377\0\370\366\354\0\370\366\3545\321\275b\377\267"
		"\230\13\377\272\227\0\377\271\230\0\377\272\227\0\377\271\230\0\377\271\230"
		"\0\377\271\230\0\377\272\227\0\377\271\230\0\377\271\230\0\377\271\230\0"
		"\377\271\230\0\377\271\230\0\377\271\230\0\377\271\230\0\377\271\230\0\377"
		"\271\230\0\377\271\230\0\377\272\227\0\377\271\230\0\377\271\230\0\377\271"
		"\230\0\377\271\230\0\377\264\223\16\377\231\212D\375\300\300\300\2\362\362"
		"\362\0\377\377\377\0\377\377\377\0\376\376\376\0\376\376\376\1\361\361\361"
		"\11\320\317\316\21\261\260\256\30\245\245\243\31\243\243\241\31\243\243\241"
		"\30\243\243\241\31\243\243\241\31\244\243\241\25\243\243\241\25\243\243\241"
		"\25\243\243\241\23\243\243\241\22\243\243\241\22\243\243\241\24\243\243\241"
		"\25\243\243\241\26\243\243\241\27\243\243\241\31\243\243\241\34\243\243\241"
		"\34\243\243\241\34\243\243\241\32\243\242\240\23\243\243\242\14\251\251\250"
		};

/** Initialize the Alert.
 * \par Description:
 *	The Alert is like a Messagebox in windows.  It provides a way to show errors,
 *  About boxes or even tips without having to create your own Window. 
 * \param cTitle - The title of the window.
 * \param cText  - The text that will be shown in the Alert.
   \param nFlags - The flags that will be passed to the appserver to tell the appserver what options
   				   when creating this.
 * \param ...    - The name of buttons to create(IE: would be like "ok" or "cancel").  You can create 
 					more than one button(IE: new Alert("Title","Text",WND_NOT_RESIZABLE,"OK", "CANCEL");).  
 * \sa Go() 
 * \author	Kurt Skauen (kurt@atheos.cx) with modifications by Rick Caudill
 *****************************************************************************/
Alert::Alert( const std::string & cTitle, const std::string & cText, int nFlags, ... ):Window( Rect( 100, 50, 100, 50 ), "alert_window", cTitle.c_str(), WND_NOT_RESIZABLE | WND_NO_ZOOM_BUT | WND_NO_DEPTH_BUT )
{

	va_list pArgs;

	va_start( pArgs, nFlags );
	cm_pcBitmap = NULL;

	m_pcView = new AlertView( cText, pArgs );
	m_pcView->SetFgColor( 0, 0, 0 );
	m_pcView->SetBgColor( get_default_color( COL_NORMAL ) );
	Point cSize = m_pcView->GetPreferredSize( true );

	m_pcView->ResizeTo( cSize );
	ResizeTo( cSize );

	if( nFlags > 0 )
	{
		SetFlags( nFlags );
	}
	Desktop cDesktop;

	MoveTo( cDesktop.GetResolution().x / 2 - cSize.x / 2, cDesktop.GetResolution(  ).y / 2 - cSize.y / 2 );

	AddChild( m_pcView );
	va_end( pArgs );
	m_pcInvoker = NULL;
	m_hMsgPort = -1;

	Flush();
	Sync();
}

/** Initialize the Alert.
 * \par Description:
 *	The Alert is like a Messagebox in windows.  It provides a way to show errors,
 *  About boxes or even tips without having to create your own Window. 
 * \param cTitle   - The title of the window.
 * \param cText    - The text that will be shown in the Alert.
 * \param nFlags   - The flags that will be passed to the appserver to tell the appserver what options
   				     when creating this.
 * \param pcBitmap - Bitmap that will show up in the Alert Window. 
 * \param ...      - The name of buttons to create(IE: would be like "ok" or "cancel").  You can create 
 					more than one button(IE: new Alert("Title","Text",WND_NOT_RESIZABLE,"OK", "CANCEL");).  
 * \sa Go() 
 * \author	Kurt Skauen (kurt@atheos.cx) with modifications by Rick Caudill
 *****************************************************************************/
Alert::Alert( const std::string & cTitle, const std::string & cText, Bitmap * pcBitmap, int nFlags, ... ):Window( Rect( 100, 50, 100, 50 ), "alert_window", cTitle.c_str(), WND_NOT_RESIZABLE | WND_NO_ZOOM_BUT | WND_NO_DEPTH_BUT )
{
	va_list pArgs;

	va_start( pArgs, nFlags );

	if( nFlags > 0 )
	{
		SetFlags( nFlags );
	}

	cm_pcBitmap = NULL;
	m_pcView = new AlertView( cText, pArgs, pcBitmap );

	m_pcView->SetEraseColor( get_default_color( COL_NORMAL ) );
	m_pcView->SetFgColor( 0, 0, 0 );
	m_pcView->SetBgColor( get_default_color( COL_NORMAL ) );
	Point cSize = m_pcView->GetPreferredSize( true );

	m_pcView->ResizeTo( cSize );
	ResizeTo( cSize );

	Desktop cDesktop;

	MoveTo( cDesktop.GetResolution().x / 2 - cSize.x / 2, cDesktop.GetResolution(  ).y / 2 - cSize.y / 2 );

	AddChild( m_pcView );
	va_end( pArgs );
	m_pcInvoker = NULL;
	m_hMsgPort = -1;

	m_pcView->Paint( GetBounds() );

	Flush();
	Sync();
}


/** Initialize the Alert.
 * \par Description:
 *	The Alert is like a Messagebox in windows.  It provides a way to show errors,
 *  About boxes or even tips without having to create your own Window. 
 * \param cTitle    - The title of the window.
 * \param cText     - The text that will be shown in the Alert.
 * \param nFlags    - The flags that will be passed to the appserver to tell the appserver what options
   				       when creating this.
 * \param nAlertNum - Static icons that will show up when you call this constructor. To call the icons you would do something like this: (new Alert("Title","Text", Alert::ALERT_WARNING,0."OK",NULL);)
 * \param ...       - The name of buttons to create(IE: would be like "ok" or "cancel").  You can create 
 					more than one button(IE: new Alert("Title","Text",WND_NOT_RESIZABLE,"OK", "CANCEL");).  
 * \sa Go() 
 * \author	Kurt Skauen (kurt@atheos.cx) with modifications by Rick Caudill
 *****************************************************************************/
Alert::Alert( const std::string & cTitle, const std::string & cText, alert_icon nAlertNum, int nFlags, ... ):Window( Rect( 100, 50, 100, 50 ), "alert_window", cTitle.c_str(), WND_NOT_RESIZABLE | WND_NO_ZOOM_BUT | WND_NO_DEPTH_BUT )
{
	va_list pArgs;

	va_start( pArgs, nFlags );

	nImage = nAlertNum;

	if( nFlags > 0 )
	{
		SetFlags( nFlags );
	}

	cm_pcBitmap = 0;

	switch ( nImage )
	{

	case ALERT_WARNING:
		SetImage( nWarning_Icon.width, nWarning_Icon.height, ( uint8 * )nWarning_Icon.pixel_data );
		break;
	case ALERT_INFO:
		SetImage( nInfo_Icon.width, nInfo_Icon.height, ( uint8 * )nInfo_Icon.pixel_data );
		break;
	case ALERT_QUESTION:
		SetImage( nQuestion_Icon.width, nQuestion_Icon.height, ( uint8 * )nQuestion_Icon.pixel_data );
		break;
	default:
		break;
	}
	m_pcView = new AlertView( cText, pArgs, cm_pcBitmap );

	m_pcView->SetEraseColor( get_default_color( COL_NORMAL ) );
	m_pcView->SetFgColor( 0, 0, 0 );
	m_pcView->SetBgColor( get_default_color( COL_NORMAL ) );
	Point cSize = m_pcView->GetPreferredSize( true );

	m_pcView->ResizeTo( cSize );
	ResizeTo( cSize );

	Desktop cDesktop;

	MoveTo( cDesktop.GetResolution().x / 2 - cSize.x / 2, cDesktop.GetResolution(  ).y / 2 - cSize.y / 2 );

	AddChild( m_pcView );
	va_end( pArgs );
	m_pcInvoker = NULL;
	m_hMsgPort = -1;
	m_pcView->Paint( GetBounds() );

	Flush();
	Sync();
}

/** Initialize the Alert.
 * \par Description:
 *	The Alert is like a Messagebox in windows.  It provides a way to show errors,
 *  About boxes or even tips without having to create your own Window.    When you 
 *  invoke this constructor, you will be able to add a view to the Alert.  This way you can 
 *  create your own specialized Alert. 
 * \param cTitle    - The title of the window.
 * \param pcView -  The view that will be added to the Alert   
 * \par Example:  If the View that is added to the Alert has another control
 *  on it, you must invoke Control::SetTarget(Messenger*)
 * \code
 *  Window* pcWindow = new Window(Rect(100,100,500,500),"","Alert test")
 *  View* pcView = new View(Rect(),"");
 *  Button* pcButton  = new Button(Rect(),"","Ok", new Message(NULL));
 *  pcButton->SetTarget(pcWindow) //bad example, but it shows how to do it
 *  Alert * pcAlert("Test",pcView);
 * \endcode
 * \sa Go() 
 * \author	Rick Caudill(cau0730@cup.edu)
 *****************************************************************************/
Alert::Alert( const std::string & cTitle, os::View * pcView ):Window( Rect( 100, 50, pcView->GetBounds().Width(  ) + 100, pcView->GetBounds(  ).Height(  ) + 50 ), "alert_window", cTitle.c_str(  ), WND_NOT_RESIZABLE | WND_NO_ZOOM_BUT | WND_NO_DEPTH_BUT )
{
	m_pcInvoker = NULL;
	m_hMsgPort = -1;

	AddChild( pcView );
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

Alert::~Alert()
{
	if( m_hMsgPort != -1 )
	{
		delete_port( m_hMsgPort );
	}
	delete m_pcInvoker;

	if( cm_pcBitmap != NULL )
	{
		delete cm_pcBitmap;
	}
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

void Alert::HandleMessage( Message * pcMessage )
{
	if( pcMessage->GetCode() < int32 ( m_pcView->m_cButtons.size(  ) ) )
	{
		if( m_hMsgPort >= 0 )
		{
			send_msg( m_hMsgPort, pcMessage->GetCode(), NULL, 0 );
		}
		else
		{
			if( m_pcInvoker != NULL )
			{
				Message *pcMsg = m_pcInvoker->GetMessage();

				if( pcMsg == NULL )
				{
					dbprintf( "Error: Invoker registered with this Alert requester does not have a message!\n" );
				}
				else
				{
					pcMsg->AddInt32( "which", pcMessage->GetCode() );
					m_pcInvoker->Invoke();
				}
			}
			PostMessage( M_QUIT );
		}
	}
	else
	{
		Handler::HandleMessage( pcMessage );
	}
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

int Alert::Go()
{
	uint32 nCode;
	int nError;

	m_hMsgPort = create_port( "alert_port", DEFAULT_PORT_SIZE );

	Show();
	MakeFocus();
	if( m_hMsgPort < 0 )
	{
		dbprintf( "Alert::WaitForSelection() failed to create message port\n" );
		PostMessage( M_QUIT );
		return ( -1 );
	}
	nError = get_msg( m_hMsgPort, &nCode, NULL, 0 );
	if( nError < 0 )
	{
		PostMessage( M_QUIT );
		return ( -1 );
	}
	else
	{
		PostMessage( M_QUIT );
		return ( nCode );
	}
}



//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------


void Alert::Go( Invoker * pcInvoker )
{
	m_pcInvoker = pcInvoker;
	Show();
	MakeFocus();
}



//----------------------------------------------------------------------------
// NAME: SetImage()
// DESC: SetImage() is a private method for adding alert icons to the alert
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

void Alert::SetImage( uint32 nWidth, uint32 nHeight, uint8 *pnBuffer )
{

	if( cm_pcBitmap != 0 )
		delete cm_pcBitmap;

	uint32 nBufferSize = nWidth * nHeight * 4;

	cm_pcBitmap = new Bitmap( nWidth, nHeight, CS_RGB32 );

	Color32_s cBGCol = get_default_color( COL_NORMAL );

	uint8 *pnRaster = cm_pcBitmap->LockRaster();

	for( uint32 nByte = 0; nByte < nBufferSize; nByte += 4 )
	{
		if( ( pnBuffer[nByte] != 0 ) || ( pnBuffer[nByte + 1] != 0 ) || ( pnBuffer[nByte + 2] != 0 ) )
		{
			( *pnRaster++ ) = pnBuffer[nByte + 2];
			( *pnRaster++ ) = pnBuffer[nByte + 1];
			( *pnRaster++ ) = pnBuffer[nByte];
			( *pnRaster++ ) = pnBuffer[nByte + 3];
		}
		else
		{
			( *pnRaster++ ) = cBGCol.blue;
			( *pnRaster++ ) = cBGCol.green;
			( *pnRaster++ ) = cBGCol.red;
			( *pnRaster++ ) = cBGCol.alpha;
		}

	}

	cm_pcBitmap->UnlockRaster();

	Flush();
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

AlertView::AlertView( const std::string & cText, va_list pButtons, Bitmap * pcBitmap ):View( Rect( 0, 0, 1, 1 ), "alert", CF_FOLLOW_ALL )
{
	const char *pzButName;

	pcBitmp = pcBitmap;
	uint i = 0;

	while( ( pzButName = va_arg( pButtons, const char * ) ) != NULL )
	{
		Button *pcButton = new Button( Rect( 0, 0, 1, 1 ), pzButName, pzButName, new Message( i++ ) );

		m_cButtons.push_back( pcButton );
		AddChild( pcButton );

		Point cSize = pcButton->GetPreferredSize( true );

		if( cSize.x > m_cButtonSize.x )
		{
			m_cButtonSize.x = (float)((uint)cSize.x);
		}
		if( cSize.y > m_cButtonSize.y )
		{
			m_cButtonSize.y = (float)((uint)cSize.y);
		}
	}

	float nWidth = ( m_cButtonSize.x + 5 ) * m_cButtons.size();

	int nStart = 0;

	for( i = 0; i <= cText.size(); ++i )
	{
		if( i == cText.size() || cText[i] == '\n' )
		{
			int nLen = i - nStart;

			std::string cLine( cText, nStart, nLen );
			m_cLines.push_back( cLine );
			float nStrLen = GetStringWidth( cLine.c_str() ) + 20;

			if( nStrLen > nWidth )
			{
				nWidth = nStrLen;
			}
			nStart = i + 1;
		}
	}

	float x;
	font_height sFontHeight;

	GetFontHeight( &sFontHeight );
	m_vLineHeight = sFontHeight.ascender + sFontHeight.descender + sFontHeight.line_gap;

	float nHeight = m_cLines.size() * m_vLineHeight;

	nHeight += m_cButtonSize.y + 30;

	float y = nHeight - m_cButtonSize.y - 5;

	if( pcBitmap != NULL )
	{
		x = nWidth - m_cButtons.size() * ( m_cButtonSize.x + 5 ) + pcBitmap->GetBounds(  ).Width(  );
	}

	else
	{
		x = nWidth - m_cButtons.size() * ( m_cButtonSize.x + 5 ) - 5;	// sets button placement
	}
	for( i = 0; i < m_cButtons.size(); ++i )
	{
		if( pcBitmap != NULL )
		{

			m_cButtons[i]->SetFrame( Rect( x, y, x + m_cButtonSize.x, y + m_cButtonSize.y - 1 ) );	//look here for button position manip
			x += m_cButtonSize.x + 5;
			m_cButtons[i]->Flush();
			m_cButtons[i]->Sync();

		}
		else
		{

			m_cButtons[i]->SetFrame( Rect( x, y, x + m_cButtonSize.x + 5, y + m_cButtonSize.y - 1 ) );	//look here for button position manip
			x += m_cButtonSize.x + 5;	// was 5
			m_cButtons[i]->Flush();
			m_cButtons[i]->Sync();

		}

	}

	if( pcBitmp != NULL )
	{
		m_cMinSize.x = nWidth + pcBitmp->GetBounds().Width(  ) + 5;

	}
	else
	{
		m_cMinSize.x = nWidth;	//was 0

	}
	m_cMinSize.y = nHeight + 4;

	Invalidate();

}

void AlertView::AllAttached()
{
	m_cButtons[0]->MakeFocus();
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

Point AlertView::GetPreferredSize( bool bLargest )
{
	return ( m_cMinSize );
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

void AlertView::Paint( const Rect & cUpdateRect )
{
	FillRect( GetBounds(), get_default_color( COL_NORMAL ) );

	if( pcBitmp != NULL )
	{
		SetDrawingMode( DM_BLEND );
		DrawBitmap( pcBitmp, pcBitmp->GetBounds(), Rect( 5, 5, pcBitmp->GetBounds(  ).Width(  ) + 1, pcBitmp->GetBounds(  ).Height(  ) ) );
		SetDrawingMode( DM_OVER );

		float y = 20.0f;

		for( uint i = 0; i < m_cLines.size(); ++i )
		{
			MovePenTo( 20 + pcBitmp->GetBounds().Width(  ), y );
			DrawString( m_cLines[i].c_str() );
			y += m_vLineHeight;
		}
	}
	else
	{
		float y = 20.0f;

		for( uint i = 0; i < m_cLines.size(); ++i )
		{
			if( pcBitmp != NULL )
			{
				MovePenTo( pcBitmp->GetBounds().Width(  ) / 2 + 2, pcBitmp->GetBounds(  ).Height(  ) / 2 + 7 );
			}
			else
			{
				MovePenTo( 10, y );
			}

			DrawString( m_cLines[i].c_str() );
			y += m_vLineHeight;
		}
	}

	//Invalidate();
}


//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

ProgressRequester::ProgressRequester( const Rect & cFrame, const char *pzName, const char *pzTitle, bool bCanSkip ):Window( cFrame, pzName, pzTitle )
{
	Lock();
	m_bDoCancel = false;
	m_bDoSkip = false;

	m_pcProgView = new ProgressView( GetBounds(), bCanSkip );
	AddChild( m_pcProgView );
	Unlock();
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

void ProgressRequester::HandleMessage( Message * pcMessage )
{
	switch ( pcMessage->GetCode() )
	{
	case IDC_CANCEL:
		m_bDoCancel = true;
		break;
	case IDC_SKIP:
		m_bDoSkip = true;
		break;
	default:
		Handler::HandleMessage( pcMessage );
		break;
	}
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

bool ProgressRequester::DoCancel() const
{
	return ( m_bDoCancel );
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

bool ProgressRequester::DoSkip()
{
	bool bSkip = m_bDoSkip;

	m_bDoSkip = false;
	return ( bSkip );
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

void ProgressRequester::SetPathName( const char *pzString )
{
	m_pcProgView->m_pcPathName->SetString( pzString );
	m_bDoSkip = false;
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

void ProgressRequester::SetFileName( const char *pzString )
{
	m_pcProgView->m_pcFileName->SetString( pzString );
	m_bDoSkip = false;
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

ProgressView::ProgressView( const Rect & cFrame, bool bCanSkip ):View( cFrame, "progress_view", CF_FOLLOW_ALL )
{
	m_pcFileName = new StringView( Rect( 0, 0, 1, 1 ), "file_name", "" );
	m_pcPathName = new StringView( Rect( 0, 0, 1, 1 ), "path_name", "" );
	m_pcCancel = new Button( Rect( 0, 0, 1, 1 ), "cancel", "Cancel", new Message( ProgressRequester::IDC_CANCEL ) );
	if( bCanSkip )
	{
		m_pcSkip = new Button( Rect( 0, 0, 1, 1 ), "skip", "Skip", new Message( ProgressRequester::IDC_SKIP ) );
	}
	else
	{
		m_pcSkip = NULL;
	}

	AddChild( m_pcPathName );
	AddChild( m_pcFileName );
	AddChild( m_pcCancel );

	if( m_pcSkip != NULL )
	{
		AddChild( m_pcSkip );
	}

	m_pcPathName->SetBgColor( 220, 220, 220 );
	m_pcPathName->SetFgColor( 0, 0, 0 );

	m_pcFileName->SetBgColor( 220, 220, 220 );
	m_pcFileName->SetFgColor( 0, 0, 0 );

	Layout( GetBounds() );
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

void ProgressView::Paint( const Rect & cUpdateRect )
{
	SetFgColor( 220, 220, 220 );
	FillRect( cUpdateRect );
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

void ProgressView::FrameSized( const Point & cDelta )
{
	Layout( GetBounds() );
}

//----------------------------------------------------------------------------
// NAME:
// DESC:
// NOTE:
// SEE ALSO:
//----------------------------------------------------------------------------

void ProgressView::Layout( const Rect & cBounds )
{
	Point cSize1 = m_pcCancel->GetPreferredSize( false );
	Point cSize2;

	if( m_pcSkip != NULL )
	{
		cSize2 = m_pcSkip->GetPreferredSize( false );
	}
	else
	{
		cSize2 = cSize1;
	}

	Point cStrSize = m_pcFileName->GetPreferredSize( false );

	cStrSize.x = cBounds.Width() - 9.0f;

	if( cSize2.x > cSize1.x )
	{
		cSize1.x = cSize2.x;
	}
	if( cSize2.y > cSize1.y )
	{
		cSize1.y = cSize2.y;
	}

	if( m_pcSkip != NULL )
	{
		m_pcSkip->ResizeTo( cSize1 );
	}
	m_pcCancel->ResizeTo( cSize1 );

	Point cPos1 = cBounds.RightBottom() - cSize1 - Point( 5, 5 );
	Point cPos2 = cPos1;

	cPos2.x -= cSize1.x + 5;

	float nCenter = ( ( cBounds.Height() + 1.0f ) - cSize1.y - 5.0f ) / 2.0f;

	m_pcPathName->ResizeTo( cStrSize );
	m_pcPathName->MoveTo( 5, nCenter - cStrSize.y / 2 - cStrSize.y );

	m_pcFileName->ResizeTo( cStrSize );
	m_pcFileName->MoveTo( 5, nCenter - cStrSize.y / 2 + cStrSize.y );

	if( m_pcSkip != NULL )
	{
		m_pcSkip->MoveTo( cPos1 );
		m_pcCancel->MoveTo( cPos2 );
	}
	else
	{
		m_pcCancel->MoveTo( cPos1 );
	}
	Flush();
}
