* Sept 01 2003, Kristian Van Der Vliet *

The kernel version information has now been changed.  The kernel itself now sets the
system name and CPU type, as apposed to Glibc.  Changes have been made to Glibc uname.c
to reflect these changes, and the version and revision fields have been split into two
distinct fields (Which now contain valid data).  Sample output of uname -a is:

[root@hostname:~]uname -a
syllable liqwyd.domain 0 0.5 i586 unknown

* Aug 7 2003, Kristian Van Der Vliet *

Applied the GNU Indent styleguide script to all of the kernel source files and applied
a patch to the Makefile which fixes subsequent problems with generating the
kernel.exports.c file with the GNU Indent changes applied.

* Jul 16 2003, Kristian Van Der Vliet *

Patches from Arno Klenke <arno_klenke@yahoo.de>
	* New PCI module which no longer requires a PCI BIOS to function.
	* CPU capability detection (E.g. CPU type, MMX, SSE[2] support)
	* Use the APIC when available on single CPU systems

* Jun 26 2003, Kristian Van Der Vliet *

Disabled errent debug output from the IP stack during tcp transmits.

* Jun 26 2003, Kristian Van Der Vliet *

Applied patch from Arno Klenke <arno_klenke@yahoo.de> which stops the kernel from
unloading a filesystem if it is loaded a boot module.  This should stop spurious
"Unable to find boot device" messages when using the root=@boot argument.

* May 17 2003, Kristian Van Der Vliet *

find_boot_dev() function in init.c which is used to "probe" for a boot CD in all of the
available drives.  The function iterates over all of the available devices in /dev/disk and
attempts to mount each one of them using the boot FS.  If the disk can be mounted,
then a check is made for a file called "SYLLABLE" in the device root.

To enable boot device probing you must pass root=@boot to the kernel.

The flag MNTF_SLOW_DEVICE has also been added to filesystem.h
which the do_mount() function to attempt to mount a device upto a maximum of five
times.  This is useful if we are booting from E.g. a very slow CD-ROM drive, which
can take some time to spin up.

* Feb 16 2003, Kristian Van Der Vliet *

Applied a patch by Alexander Deynichenko <thorn@fpss.ru> which splits
the PCI class information into an API, base and sub-class.

* Dec 31 2002, Kristian Van Der Vliet *

Added SO_BROADCAST support to the ethernet driver and ARP layer.

kernel/net/eth_interface.c : Always ignore gateway address if
  the destination is 255.255.255.255

kernel/net/arp.c : Always map IP address 255.255.255.255 to
  MAC address ff:ff:ff:ff:ff:ff

kernel/net/udp.c : Recognise SO_SETSOCKOPT flags SO_BROADCAST
  and SO_REUSEPORT (Not correctly implemented, but recognised)

* Dec 30 2002, Kristian Van Der Vliet *

Added raw sockets (SOCK_RAW) support to the IP stack with a patch from
Ville Kallioniemi <festivus@mbnet.fi>

Added raw sockets (SOCK_RAW) to the IP stack
  Changed a lot of debugging output to use the kerndbg() macro

Added ping utility (More tools to follow)
  The kernel ICMP ignores ICMP_ECHOREPLY packets.

* Dec 24 2002, Kristian Van Der Vliet *

Applied a patch from Daniel Gryniewicz <dang@fprintf.net> to the AFS
(AtheOS File System) driver, and the "mount" utility to add read-only support.

Added a mount flag for read-only (mount -r)
Added mount flag processing for read-only flag - afs_mount will now set
the read-only afs filesystem flag
Added checks in all writing entrypoints to afs for the mount flag - these
entrypoints will return a read-only error if called on a read-only filesystem.

* Nov 3 2002, Kristian Van Der Vliet *

Added a kerndbg() macro to kdebug.h  Kernel output can now be controlled
by defining the DEBUG_LIMIT macro at compile time.

* Oct 24 2002, Kristian Van Der Vliet *

Added random.c which adds two functions, seed() and rand().  These can be
used by other kernel functions, and device drivers (E.g. the new /dev/random
device).

* Sep 23 2002, Kristian Van Der Vliet *

Added make_port_public(), make_port_private() and find_port() syscalls
to msgport.c  These syscalls can be used to provide a "public" message port,
which can be retrieved by another process with the find_port() syscall.

For more information, you should refer to the online documentation.

* Sep 23 2002, Kristian Van Der Vliet *

Removed both set_tld() and get_tld() in process.c  These syscalls were not
required; they are implemented in user space as part of libc.


* Sep 15 2002, Kristian Van Der Vliet *

Applied a fix to sys/kernel/kernel/vfs/vfs.c  The fcntl() F_GETLK command
now works as expected.

